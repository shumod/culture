<?php

module_load_include('inc', 'culture', 'functions');
module_load_include('inc', 'culture', 'inc/search');

/**
 * Implements hook_menu().
 */
function culture_menu() {
  //регионы
  $items['r'] = array(
    'title' => 'Все регионы',
    'page callback' => '_regions',
    'access arguments' => array('administer site configuration'),
    'file' => 'inc/regionpage.culture.inc',  
    'type' => MENU_NORMAL_ITEM,
  );
  $items['r/%'] = array(
    'title callback' => '_region_title',
    'title arguments' => array(1),
    'page callback' => '_region',
    'access arguments' => array('administer site configuration'),
    'page arguments' => array(1),
    'file' => 'inc/regionpage.culture.inc',  
    'type' => MENU_NORMAL_ITEM,
  ); 

  //места
  $items['r/%/places'] = array(
    'title' => 'Места',
    'page callback' => '_places',
    'access arguments' => array('administer site configuration'),
    'page arguments' => array(1),
    'file' => 'inc/places.culture.inc',  
    'type' => MENU_NORMAL_ITEM,
  );

  $items['r/%/places/%'] = array(
    'page callback' => '_place',
    'page arguments' => array(1,3),
    'access arguments' => array('administer site configuration'),
    'file' => 'inc/places.culture.inc',
  );

  //события
  $items['r/%/events'] = array(
    'title' => 'События',
    'page callback' => '_events',
    'access arguments' => array('administer site configuration'),
    'page arguments' => array(1),
    'file' => 'inc/events.culture.inc',
    'type' => MENU_NORMAL_ITEM,
  );

  $items['r/%/events/%'] = array(
    'page callback' => '_event',
    'page arguments' => array(1,3),
    'access arguments' => array('administer site configuration'),
    'file' => 'inc/events.culture.inc',
    'type' => MENU_NORMAL_ITEM,
  );

  //статьи
  $items['articles'] = array(
    'title' => 'Статьи',
    'page callback' => '_articles',
    'access arguments' => array('administer site configuration'),
    'file' => 'inc/articles.culture.inc',
    'type' => MENU_NORMAL_ITEM,
  );

  $items['articles/%'] = array(
    'page callback' => '_article',
    'page arguments' => array(1),
    'access arguments' => array('administer site configuration'),
    'file' => 'inc/articles.culture.inc',
    'type' => MENU_NORMAL_ITEM,
  );

  //локали
  $items['reload-locales'] = array(
    'title' => 'Обновление списка локалей',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('locales_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'inc/reload.culture.inc',
  );

  //выбор региона
  $items['set-region/%'] = array(
    'page callback' => '_set_region',
    'page arguments' => array(1),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
  ); 

  //сайтмэп
  $items['sitemap.txt'] = array(
    'page callback' => '_main_sitemap',
    'file' => 'inc/sitemap.inc',
    'access arguments' => array('View published content'), 
    'type' => MENU_CALLBACK, 
  );
  $items['events.txt'] = array(
    'page callback' => '_events_sitemap',
    'file' => 'inc/sitemap.inc',
    'access arguments' => array('View published content'), 
    'type' => MENU_CALLBACK, 
  );
  $items['places.txt'] = array(
    'page callback' => '_places_sitemap',
    'file' => 'inc/sitemap.inc',
    'access arguments' => array('View published content'), 
    'type' => MENU_CALLBACK, 
  );
  $items['organizations.txt'] = array(
    'page callback' => '_organizations_sitemap',
    'file' => 'inc/sitemap.inc',
    'access arguments' => array('View published content'), 
    'type' => MENU_CALLBACK, 
  );
  $items['search'] = array(
    'page callback' => '_search_page',
    'file' => 'inc/search.inc',
    'access arguments' => array('View published content'), 
    'type' => MENU_CALLBACK, 
  );

  return $items;
}

/**
 * Implements hook_menu_alter().
 */
function culture_menu_link_alter(&$link) {
  if ($link['link_title'] == 'Статьи') {
    dsm($link);
  }
}

/**
 * Implements hook_theme.
 */
function culture_theme() {
  return array(

    //темплейт для страницы списка мест
    'places' => array(
      'variables' => array(
        'title' => NULL,
      ),
      'template' => 'templates/places',
    ),

    //темплейт для страницы места
    'place' => array(
      'variables' => array(
        'title' => NULL,
      ),
      'template' => 'templates/place',
    ),

    //темплейт для страницы списка событий
    'events' => array(
      'variables' => array(
        'title' => NULL,
      ),
      'template' => 'templates/events',
    ),

    //темплейт для страницы события
    'event' => array(
      'variables' => array(
        'title' => NULL,
      ),
      'template' => 'templates/event',
    ),

    //темплейт для страниц статей
    'articles' => array(
      'variables' => array(
        'title' => NULL,
      ),
      'template' => 'templates/articles',
    ),

    //темплейт для страницы статьи
    'article' => array(
      'variables' => array(
        'title' => NULL,
      ),
      'template' => 'templates/article',
    ),

    //темплейт для страницы организации
    'regionpage' => array(
      'variables' => array(
        'title' => NULL,
      ),
      'template' => 'templates/regionpage',
    ),

  );
}

/**
 * Implements hook_block_info().
 */
function culture_block_info() {
  $blocks['culture-region'] = array(
    'info' => 'Блок выбора региона',
    'cache' => DRUPAL_NO_CACHE,
  );
  $blocks['culture-search'] = array(
    'info' => 'Поиск по событиям',
    'cache' => DRUPAL_NO_CACHE,
  );
  return $blocks;
}
 
/**
 * Implements hook_block_view().
 */
function culture_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'culture-search':
      $block['subject'] = 'Поиск';
      //рендерим форму выбора региона
      $block['content'] = drupal_render(drupal_get_form('_search_form'));
      break;
  }
  return $block;
}

function _region_title($region_url){
  $title = _get_region_term_from_url($region_url)->name;
  return $title;
}

/**
 * Implements hook_taxonomy_term_view().
 */
function culture_taxonomy_term_view($term, $view_mode, $langcode){
  $childrens = '';
  $childrens_array = taxonomy_get_children($term->tid);
  if(sizeof($childrens_array) > 0){
    $header = array('Регион', 'Id');
    foreach ($childrens_array as $key => $children) {
      $rows[$key][] = l($children->name, 'taxonomy/term/' . $children->tid);
      $rows[$key][] = $children->field_locales_id['und'][0]['value'];
    }
    $table = theme('table', array(
      'header' => $header, 
      'rows' => $rows, 
    ));
  }
  else{
    $table = 'Дочерних регионов не найдено';
  }
  $term->content['childrens'] = array(
    '#markup' => $table,
    '#weight' => 10,
  );
}