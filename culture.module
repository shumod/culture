<?php

module_load_include('inc', 'culture', 'functions');

/**
 * Implements hook_menu().
 */
function culture_menu() {
  //регионы
  $items['r'] = array(
    'title' => 'Все регионы',
    'page callback' => '_regions',
    'access arguments' => array('administer site configuration'),
    'file' => 'inc/region.inc',  
    'type' => MENU_NORMAL_ITEM,
  );
  $items['r/%'] = array(
    'title callback' => '_region_title',
    'title arguments' => array(1),
    'page callback' => '_region',
    'access arguments' => array('administer site configuration'),
    'page arguments' => array(1),
    'file' => 'inc/region.inc',  
    'type' => MENU_NORMAL_ITEM,
  ); 

  //места
  $items['r/%/places'] = array(
    'title' => 'Места',
    'page callback' => '_places',
    'access arguments' => array('administer site configuration'),
    'page arguments' => array(1),
    'file' => 'inc/places.culture.inc',  
    'type' => MENU_NORMAL_ITEM,
  );

  $items['r/%/places/%'] = array(
    'page callback' => '_place',
    'page arguments' => array(1,3),
    'access arguments' => array('administer site configuration'),
    'file' => 'inc/places.culture.inc',
  );

  //события
  $items['r/%/events'] = array(
    'title' => 'События',
    'page callback' => '_events',
    'access arguments' => array('administer site configuration'),
    'page arguments' => array(1),
    'file' => 'inc/events.culture.inc',
    'type' => MENU_NORMAL_ITEM,
  );

  $items['r/%/events/%'] = array(
    'page callback' => '_event',
    'page arguments' => array(1,3),
    'access arguments' => array('administer site configuration'),
    'file' => 'inc/events.culture.inc',
    'type' => MENU_NORMAL_ITEM,
  );

  //организации
  $items['organizations'] = array(
    'title' => 'Организации',
    'page callback' => '_organizations',
    'access arguments' => array('administer site configuration'),
    'file' => 'inc/organizations.culture.inc',
    'type' => MENU_NORMAL_ITEM,
  );

  $items['organizations/%'] = array(
    'page callback' => '_organization',
    'page arguments' => array(1),
    'access arguments' => array('administer site configuration'),
    'file' => 'inc/organizations.culture.inc',
    'type' => MENU_NORMAL_ITEM,
  ); 

  //локали
  $items['reload-locales'] = array(
    'title' => 'Обновление списка локалей',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('locales_form'),
    'access arguments' => array('administer site configuration'),
  );

  //выбор региона
  $items['set-region/%'] = array(
    'page callback' => '_set_region',
    'page arguments' => array(1),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
  ); 

  //сайтмэп
  $items['sitemap.txt'] = array(
    'page callback' => '_main_sitemap',
    'file' => 'inc/sitemap.inc',
    'access arguments' => array('View published content'), 
    'type' => MENU_CALLBACK, 
  );
  $items['events.txt'] = array(
    'page callback' => '_events_sitemap',
    'file' => 'inc/sitemap.inc',
    'access arguments' => array('View published content'), 
    'type' => MENU_CALLBACK, 
  );
  $items['places.txt'] = array(
    'page callback' => '_places_sitemap',
    'file' => 'inc/sitemap.inc',
    'access arguments' => array('View published content'), 
    'type' => MENU_CALLBACK, 
  );
  $items['organizations.txt'] = array(
    'page callback' => '_organizations_sitemap',
    'file' => 'inc/sitemap.inc',
    'access arguments' => array('View published content'), 
    'type' => MENU_CALLBACK, 
  );
  $items['search'] = array(
    'page callback' => '_search_page',
    'file' => 'inc/search.inc',
    'access arguments' => array('View published content'), 
    'type' => MENU_CALLBACK, 
  );

  return $items;
}

/**
 * Implements hook_theme.
 */
function culture_theme() {
  return array(

    //темплейт для страницы списка мест
    'places' => array(
      'variables' => array(
        'title' => NULL,
      ),
      'template' => 'templates/places',
    ),

    //темплейт для страницы места
    'place' => array(
      'variables' => array(
        'title' => NULL,
      ),
      'template' => 'templates/place',
    ),

    //темплейт для страницы списка событий
    'events' => array(
      'variables' => array(
        'title' => NULL,
      ),
      'template' => 'templates/events',
    ),

    //темплейт для страницы события
    'event' => array(
      'variables' => array(
        'title' => NULL,
      ),
      'template' => 'templates/event',
    ),

    //темплейт для страницы организации
    'organization' => array(
      'variables' => array(
        'title' => NULL,
      ),
      'template' => 'templates/organization',
    ),

  );
}

/**
 * Implements hook_block_info().
 */
function culture_block_info() {
  $blocks['culture-region'] = array(
    'info' => 'Блок выбора региона',
    'cache' => DRUPAL_NO_CACHE,
  );
  $blocks['culture-search'] = array(
    'info' => 'Поиск по событиям',
    'cache' => DRUPAL_NO_CACHE,
  );
  return $blocks;
}
 
/**
 * Implements hook_block_view().
 */
function culture_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'culture-region':
      $block['subject'] = 'Выберите регион';
      //рендерим форму выбора региона
      $block['content'] = drupal_render(drupal_get_form('_select_region_form'));
      break;

    case 'culture-search':
      $block['subject'] = 'Поиск';
      //рендерим форму выбора региона
      $block['content'] = drupal_render(drupal_get_form('_search_form'));
      break;
  }
  return $block;
}

//форма для вывода локалей
function locales_form($form, &$form_state){

  $form = array();

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Начать обновление',
  );

  $total_url = 'http://all.culture.ru/api/1.0/locales?limit=1';
  $total = _decode($total_url, FALSE)->total;

  $terms_array = taxonomy_get_tree(taxonomy_vocabulary_machine_name_load('locales')->vid);
  $terms_count = sizeof($terms_array);

  $form['markup'] = array(
    '#markup' => 'Всего локалей в открытой базе: ' . $total . ', в нашей базе: ' . $terms_count,
  );  

  return $form;
}

//при клике на кнопку с локалями - создавать batch
function locales_form_submit($form, &$form_state){

  $vid = taxonomy_vocabulary_machine_name_load('locales')->vid;

  //формируем массив всех локалей. за один раз получать можно только 1000 локалей
  $total_url = 'http://all.culture.ru/api/1.0/locales?limit=1';

  $total = _decode($total_url, FALSE)->total;

  $operations = array();
  for($i = 0; $i < $total; $i++){
    $operations[] = array('reload_taxonomy_locale_term', array($vid));
  }

  $batch = array(
    // Массив операций и их параметров
    'operations' => $operations,
    // Функция, которая будет выполнена после окончания всех операций
    'finished' => 'locale_batch_finished',
    // Заголовок страницы с прогресс баром.
    // Опционально, по умолчанию t('Processing')
    'title' => 'Обновление терминов таксономии',
    // Сообщение, показываемое при инициализации.
    // Опционально, по умолчанию t('Initializing.')
    'init_message' => 'Подготовка данных',
    // Сообщение, показывемое при выполнении операций.
    // Опционально, по умолчанию t('Completed @current of @total.')
    'progress_message' => 'Выполнено @current из @total.',
    // Сообщение показываемое при ошибке выполнения операции.
    // Опционально, по умолчанию t('An error has occurred.')
    'error_message' => 'Произошла ошибка.',
  );

  batch_set($batch);

}

//функция либо обновляет термин, либо добавляет новый
function reload_taxonomy_locale_term($vid, &$context) {

  $offset = sizeof($context['results']);

  $url = 'http://all.culture.ru/api/1.0/locales?limit=1&offset='.$offset;
  $options = array(
    'method' => 'GET',
    'timeout' => 15,
    'headers' => array('Content-Type' => 'application/x-www-form-urlencoded'),
  );
  $result = drupal_http_request($url, $options);
  $decode = json_decode($result->data);

  $parent = 0;

  $term = array(
    'vid' => $vid,
    'name' => $decode->locales[0]->name,
  );

  $term = (object) $term;

  $term_id = db_select('field_data_field_locales_id', 'lid')
    ->fields('lid', array('entity_id'))
    ->condition('lid.field_locales_id_value', $decode->locales[0]->_id)
    ->execute()
    ->fetchField();

  //записываем термин только в том случае, если такого ещё нет в базе данных
  if(!$term_id) {
    taxonomy_term_save($term);   

    $parent_id = db_select('field_data_field_locales_id', 'lid')
      ->fields('lid', array('entity_id'))
      ->condition('lid.field_locales_id_value', $decode->locales[0]->parentId)
      ->execute()
      ->fetchField();
    $parent = ($parent_id == '') ? 0 : $parent_id;
    
    $term->field_locales_id['und'][0]['value'] = $decode->locales[0]->_id;
    $term->field_locales_timezone['und'][0]['value'] = $decode->locales[0]->timezone;
    $term->parent[0] = $parent;
    taxonomy_term_save($term);
  }

  $context['results'][] = 'good';

  // Сообщение выводимое под прогресс баром после окончания текущей операции
  //$context['message'] = $vid;
  //$context['results'][] = $vid;
}

//выводит сообщения, когда список операций закончен
function locale_batch_finished($success, $results, $operations) {
  if ($success) {
    drupal_set_message('Затронуто ' . count($results) . ' материалов:');
    dsm($results);
  }
  else {
    drupal_set_message('Завершено с ошибками.', 'error');
  }
}